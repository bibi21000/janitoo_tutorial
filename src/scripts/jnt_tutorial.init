#!/bin/sh

### BEGIN INIT INFO
# Provides:             jnt_tutorial
# Required-Start:       $remote_fs $syslog $network
# Required-Stop:        $remote_fs $syslog $network
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    Janitoo tutorial
# Description:          Janitoo tutorial appliance server
#
### END INIT INFO

NAME="jnt_tutorial"

# Internal script
# You should not update lines below
# Version 0.0.9
PATH="/sbin:/bin:/usr/sbin:/usr/bin"

DAEMON="/usr/bin/${NAME}"
if [ ! -x "$DAEMON" ]; then
    DAEMON="/usr/sbin/${NAME}"
fi
if [ ! -x "$DAEMON" ]; then
    DAEMON="/usr/local/bin/${NAME}"
fi
if [ ! -x "$DAEMON" ]; then
    echo "Can't find daemon ${DAEMON}"
    exit 1
fi

CONFFILE="/etc/janitoo/${NAME}.conf"
if [ ! -f "$CONFFILE" ]; then
    CONFFILE="/opt/janitoo/etc/${NAME}.conf"
fi
if [ ! -f "$CONFFILE" ]; then
   echo "Can't find configuration ${CONFFILE}"
   exit 2
fi

PIDDIR="/run/janitoo"
if [ ! -d "$PIDDIR" ]; then
   PIDDIR="/var/run/janitoo"
fi
if [ ! -d "$PIDDIR" ]; then
   PIDDIR="/opt/janitoo/run"
fi
if [ ! -d "$PIDDIR" ]; then
   echo "Can't find pid directory ${PIDDIR}"
   exit 3
fi

PIDFILE="/${PIDDIR}/${NAME}.pid"

case "${1}" in
    start)
        echo -n "Starting ${NAME} server: "
        ${DAEMON} -c ${CONFFILE} start
        echo "${NAME}."
        ;;

    stop)
        echo -n "Stopping ${NAME} server: "
        ${DAEMON} -c ${CONFFILE} stop
        echo "${NAME}."
        ;;

    restart)
        echo -n "Restarting ${NAME} server: "
        ${DAEMON} -c ${CONFFILE} restart
        echo "${NAME}."
        ;;

    reload|force-reload)
        echo -n "Reloading ${NAME} server: "
        ${DAEMON} -c ${CONFFILE} reload
        echo "${NAME}."
        ;;

    kill)
        echo -n "Kill Janitoo fishtank server: "
        ${DAEMON} -c ${CONFFILE} kill
        echo "${NAME}."
        ;;

    status)
        PID="$(cat ${PIDFILE} 2>/dev/null)" || true

        if [ ! -f ${PIDFILE} ] || [ -z "${PID}" ]
        then
            echo "${NAME} is not running"
            exit 3
        fi

        if ps "${PID}" >/dev/null 2>&1
        then
            echo "${NAME} is running"
            exit 0
        else
            echo "${NAME} is not running"
            exit 1
        fi
        ;;

    *)
        echo "Usage: sudo service ${NAME} {start|stop|restart|reload|status|kill}"
        exit 1
        ;;
esac

exit 0
